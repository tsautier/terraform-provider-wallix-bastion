---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{ .Name }} {{ .Type }} - {{ .ProviderName }}"
subcategory: ""
description: |-
  {{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{ .Name }} ({{ .Type | title }})

Provides a TACACS+ external authentication resource.

## Example Usage

```terraform
# Basic TACACS+ external authentication
resource "wallix-bastion_externalauth_tacacs" "basic_tacacs" {
  auth_name       = "corporate_tacacs"
  display_name    = "Corporate TACACS+ Authentication"
  tacacs_host     = "tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.tacacs_shared_secret
  description     = "Basic TACACS+ authentication for corporate network devices"
  
  # Basic authentication settings
  authentication_type = "ascii"
  timeout            = 30
  enable_accounting  = true
}

# Cisco ISE TACACS+ integration
resource "wallix-bastion_externalauth_tacacs" "cisco_ise_tacacs" {
  auth_name       = "cisco_ise_tacacs"
  display_name    = "Cisco ISE TACACS+ Authentication"
  tacacs_host     = "ise.company.com"
  tacacs_port     = 49
  shared_secret   = var.cisco_ise_secret
  description     = "Cisco Identity Services Engine TACACS+ authentication"
  
  # Cisco ISE specific settings
  authentication_type = "ascii"
  authorization_type  = "tacacs"
  accounting_type     = "tacacs"
  
  # ISE integration settings
  enable_authorization = true
  enable_accounting   = true
  enable_command_auth = true
  
  # Session settings
  timeout            = 60
  max_sessions       = 10
  session_timeout    = 3600  # 1 hour
  
  # ISE attribute mapping
  attribute_mapping = {
    username       = "User-Name"
    groups         = "cisco-avpair"
    privilege_level = "priv-lvl"
    service_type   = "Service-Type"
    nas_port_type  = "NAS-Port-Type"
  }
  
  # Cisco ISE policy enforcement
  enforce_ise_policies = true
  ise_policy_name     = "Bastion_Access_Policy"
}

# High-availability TACACS+ with multiple servers
resource "wallix-bastion_externalauth_tacacs" "ha_tacacs" {
  auth_name       = "ha_tacacs"
  display_name    = "High Availability TACACS+ Authentication"
  tacacs_host     = "tacacs-primary.company.com"
  tacacs_port     = 49
  shared_secret   = var.tacacs_shared_secret
  description     = "High-availability TACACS+ with failover servers"
  
  # Primary server configuration
  authentication_type = "ascii"
  timeout            = 30
  
  # Secondary servers for failover
  failover_servers = [
    {
      host          = "tacacs-secondary.company.com"
      port          = 49
      shared_secret = var.tacacs_shared_secret
      timeout       = 30
    },
    {
      host          = "tacacs-backup.company.com"
      port          = 49
      shared_secret = var.tacacs_shared_secret
      timeout       = 45
    }
  ]
  
  # Failover settings
  enable_failover        = true
  failover_timeout       = 10
  max_retries           = 3
  retry_delay           = 5
  
  # Load balancing
  load_balancing_method = "round_robin"  # or "failover_only"
  
  # Enhanced features
  enable_authorization = true
  enable_accounting   = true
  enable_command_auth = true
  
  # Health monitoring
  enable_health_check    = true
  health_check_interval  = 60
  health_check_timeout   = 15
}

# Secure TACACS+ with encryption
resource "wallix-bastion_externalauth_tacacs" "secure_tacacs" {
  auth_name       = "secure_tacacs"
  display_name    = "Secure TACACS+ Authentication"
  tacacs_host     = "secure-tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.secure_tacacs_secret
  description     = "Secure TACACS+ authentication with enhanced encryption"
  
  # Enhanced security settings
  authentication_type = "ascii"
  encryption_type    = "md5"  # or "sha1", "sha256"
  
  # Secure connection settings
  enable_tls         = true
  tls_version        = "1.3"
  validate_certificate = true
  certificate_path   = "/etc/ssl/certs/tacacs-ca.pem"
  
  # Strong authentication
  require_strong_auth = true
  min_password_length = 12
  
  # Security policies
  enable_authorization = true
  enable_accounting   = true
  enable_command_auth = true
  
  # Audit and logging
  enable_audit_logging = true
  log_authentication  = true
  log_authorization   = true
  log_accounting      = true
  
  # Session security
  timeout             = 30
  session_timeout     = 1800  # 30 minutes
  max_concurrent_sessions = 5
  
  # IP restrictions
  enable_ip_validation = true
  allowed_ip_ranges = [
    "10.0.0.0/8",
    "192.168.1.0/24"
  ]
}

# Multi-domain TACACS+ configuration
resource "wallix-bastion_externalauth_tacacs" "multi_domain_tacacs" {
  auth_name       = "multi_domain_tacacs"
  display_name    = "Multi-Domain TACACS+ Authentication"
  tacacs_host     = "tacacs-master.company.com"
  tacacs_port     = 49
  shared_secret   = var.master_tacacs_secret
  description     = "Multi-domain TACACS+ authentication across different network segments"
  
  # Master domain configuration
  authentication_type = "ascii"
  timeout            = 30
  
  # Domain-specific servers
  domain_servers = [
    {
      domain        = "production"
      host          = "tacacs-prod.company.com"
      port          = 49
      shared_secret = var.prod_tacacs_secret
    },
    {
      domain        = "development"
      host          = "tacacs-dev.company.com"
      port          = 49
      shared_secret = var.dev_tacacs_secret
    },
    {
      domain        = "staging"
      host          = "tacacs-staging.company.com"
      port          = 49
      shared_secret = var.staging_tacacs_secret
    }
  ]
  
  # Domain routing
  enable_domain_routing = true
  domain_attribute     = "Domain"
  default_domain       = "production"
  
  # Cross-domain settings
  allow_cross_domain   = false
  validate_domain      = true
  
  # Enhanced features per domain
  enable_authorization = true
  enable_accounting   = true
  enable_command_auth = true
  
  # Domain-specific policies
  domain_policies = {
    "production" = {
      strict_auth     = true
      session_timeout = 1800
      max_sessions    = 3
    }
    "development" = {
      strict_auth     = false
      session_timeout = 7200
      max_sessions    = 10
    }
  }
}

# Legacy TACACS+ for older network equipment
resource "wallix-bastion_externalauth_tacacs" "legacy_tacacs" {
  auth_name       = "legacy_tacacs"
  display_name    = "Legacy TACACS+ Authentication"
  tacacs_host     = "legacy-tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.legacy_tacacs_secret
  description     = "Legacy TACACS+ authentication for older network equipment"
  
  # Legacy compatibility settings
  authentication_type = "ascii"
  protocol_version   = "tacacs+"  # Support older versions
  
  # Relaxed settings for legacy equipment
  timeout            = 60  # Longer timeout for slower devices
  enable_keep_alive  = true
  keep_alive_interval = 300
  
  # Basic features only (legacy support)
  enable_authorization = false  # Not supported by all legacy devices
  enable_accounting   = true
  enable_command_auth = false
  
  # Legacy attribute mapping
  attribute_mapping = {
    username      = "User-Name"
    privilege     = "priv-lvl"
    service       = "Service-Type"
  }
  
  # Compatibility options
  allow_clear_text    = false  # Still secure
  ignore_case         = true   # Case-insensitive usernames
  strip_domain        = true   # Remove domain suffix
  
  # Legacy session management
  session_timeout     = 7200   # 2 hours for maintenance windows
  idle_timeout        = 1800   # 30 minutes idle
}

# Network automation TACACS+ integration
resource "wallix-bastion_externalauth_tacacs" "automation_tacacs" {
  auth_name       = "automation_tacacs"
  display_name    = "Network Automation TACACS+ Authentication"
  tacacs_host     = "automation-tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.automation_tacacs_secret
  description     = "TACACS+ authentication for network automation and orchestration"
  
  # Automation-optimized settings
  authentication_type = "ascii"
  timeout            = 15  # Fast timeout for automation
  
  # Automation features
  enable_api_auth     = true
  api_username_format = "automation_{service}"
  
  # Service account support
  enable_service_accounts = true
  service_account_prefix  = "svc_"
  
  # Command authorization for automation
  enable_authorization = true
  enable_command_auth = true
  
  # Automation-specific attribute mapping
  attribute_mapping = {
    username       = "User-Name"
    service_type   = "Service-Type"
    automation_role = "Automation-Role"
    script_name    = "Script-Name"
    task_id        = "Task-ID"
  }
  
  # Automation policies
  automation_policies = {
    "backup_scripts" = {
      privilege_level = 15
      command_set     = "backup"
      time_restriction = "business_hours"
    }
    "config_deploy" = {
      privilege_level = 15
      command_set     = "configuration"
      approval_required = true
    }
  }
  
  # Audit for automation
  enable_automation_audit = true
  log_script_execution   = true
  log_command_output     = false  # Reduce log volume
}

# Privilege escalation TACACS+ configuration
resource "wallix-bastion_externalauth_tacacs" "privilege_tacacs" {
  auth_name       = "privilege_tacacs"
  display_name    = "Privilege Escalation TACACS+ Authentication"
  tacacs_host     = "privilege-tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.privilege_tacacs_secret
  description     = "TACACS+ authentication with privilege escalation controls"
  
  # Privilege escalation settings
  authentication_type = "ascii"
  enable_privilege_escalation = true
  
  # Authorization and command control
  enable_authorization = true
  enable_command_auth = true
  command_authorization_method = "per_command"
  
  # Privilege levels
  privilege_levels = {
    "level_1" = {
      privilege      = 1
      command_set    = "basic_show"
      description    = "Basic show commands only"
    }
    "level_7" = {
      privilege      = 7
      command_set    = "monitoring"
      description    = "Monitoring and troubleshooting commands"
    }
    "level_15" = {
      privilege      = 15
      command_set    = "full_admin"
      description    = "Full administrative access"
      approval_required = true
    }
  }
  
  # Escalation policies
  escalation_policies = {
    "emergency" = {
      auto_approve    = false
      approval_timeout = 300  # 5 minutes
      escalation_chain = ["manager", "security_team"]
    }
    "maintenance" = {
      auto_approve    = true
      time_window     = "maintenance_window"
      max_duration    = 14400  # 4 hours
    }
  }
  
  # Security controls
  require_justification = true
  log_privilege_changes = true
  enable_session_recording = true
  
  # Time-based controls
  enable_time_restrictions = true
  business_hours = {
    start = "08:00"
    end   = "18:00"
    days  = ["monday", "tuesday", "wednesday", "thursday", "friday"]
  }
}

# Vendor access TACACS+ configuration
resource "wallix-bastion_externalauth_tacacs" "vendor_tacacs" {
  auth_name       = "vendor_tacacs"
  display_name    = "Vendor Access TACACS+ Authentication"
  tacacs_host     = "vendor-tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.vendor_tacacs_secret
  description     = "TACACS+ authentication for vendor and contractor access"
  
  # Vendor-specific settings
  authentication_type = "ascii"
  timeout            = 45
  
  # Vendor access controls
  enable_vendor_controls = true
  require_escort        = true
  vendor_session_limit  = 4  # hours
  
  # Vendor attribute mapping
  attribute_mapping = {
    username        = "User-Name"
    vendor_company  = "Vendor-Company"
    contract_number = "Contract-Number"
    supervisor      = "Supervisor"
    access_level    = "Access-Level"
    expiry_date     = "Access-Expiry"
  }
  
  # Vendor authorization
  enable_authorization = true
  enable_command_auth = true
  
  # Vendor-specific command sets
  vendor_command_sets = {
    "readonly" = {
      allowed_commands = ["show.*", "ping.*", "traceroute.*"]
      denied_commands  = ["conf.*", "write.*", "reload.*"]
    }
    "maintenance" = {
      allowed_commands = ["show.*", "debug.*", "clear.*"]
      denied_commands  = ["conf.*", "write.*", "reload.*"]
      time_restricted  = true
    }
    "emergency" = {
      allowed_commands = [".*"]
      approval_required = true
      supervisor_approval = true
    }
  }
  
  # Vendor session management
  enable_session_monitoring = true
  require_session_approval  = true
  auto_terminate_on_idle    = true
  idle_timeout              = 900  # 15 minutes
  
  # Compliance and audit
  enable_vendor_audit = true
  log_all_vendor_activity = true
  compliance_reporting = true
  
  # Vendor notifications
  enable_notifications = true
  notification_events = [
    "vendor_login",
    "vendor_logout",
    "privilege_escalation",
    "session_timeout"
  ]
}

# Development and testing TACACS+ configuration
resource "wallix-bastion_externalauth_tacacs" "dev_tacacs" {
  auth_name       = "dev_tacacs"
  display_name    = "Development TACACS+ Authentication"
  tacacs_host     = "dev-tacacs.company.com"
  tacacs_port     = 49
  shared_secret   = var.dev_tacacs_secret
  description     = "Development and testing TACACS+ authentication with relaxed policies"
  
  # Development-friendly settings
  authentication_type = "ascii"
  timeout            = 60
  
  # Relaxed security for testing
  enable_debug_mode   = true
  allow_test_accounts = true
  ignore_cert_errors  = true  # For test certificates
  
  # Development features
  enable_mock_responses = true
  mock_user_data = {
    "test_admin" = {
      privilege_level = 15
      groups         = ["admin", "developer"]
    }
    "test_operator" = {
      privilege_level = 7
      groups         = ["operator", "tester"]
    }
  }
  
  # Extended sessions for development
  session_timeout     = 14400  # 4 hours
  idle_timeout        = 3600   # 1 hour
  max_sessions        = 20     # Higher limit for testing
  
  # Development attribute mapping
  attribute_mapping = {
    username     = "User-Name"
    test_role    = "Test-Role"
    environment  = "Environment"
    build_number = "Build-Number"
  }
  
  # Testing policies
  test_policies = {
    "functional_test" = {
      privilege_level = 15
      no_restrictions = true
    }
    "integration_test" = {
      privilege_level = 7
      limited_commands = true
    }
  }
  
  # Development logging
  enable_debug_logging = true
  log_all_requests    = true
  log_response_times  = true
}
```

{{ .SchemaMarkdown | trimspace }}

## Usage Notes

### TACACS+ External Authentication Overview

TACACS+ (Terminal Access Controller Access-Control System Plus) external authentication provides centralized authentication, authorization, and accounting (AAA) services, commonly used for network device management and administrative access control.

### Basic Configuration

**Required Fields:**

- **auth_name**: Internal identifier for the TACACS+ external authentication
- **display_name**: Human-readable name displayed in interfaces
- **tacacs_host**: Primary TACACS+ server hostname or IP address
- **tacacs_port**: TACACS+ server port (typically 49)
- **shared_secret**: Shared secret key for communication encryption

### TACACS+ Server Integration

**Single Server Configuration:**

```terraform
tacacs_host   = "tacacs.company.com"
tacacs_port   = 49
shared_secret = var.tacacs_shared_secret
timeout       = 30
```

**High Availability Configuration:**

```terraform
tacacs_host = "tacacs-primary.company.com"
failover_servers = [
  {
    host          = "tacacs-secondary.company.com"
    port          = 49
    shared_secret = var.tacacs_shared_secret
    timeout       = 30
  }
]
enable_failover = true
```

### Authentication Types

**ASCII Authentication:**

```terraform
authentication_type = "ascii"  # Standard ASCII authentication
```

**Enhanced Authentication:**

```terraform
authentication_type = "pap"    # Password Authentication Protocol
# or
authentication_type = "chap"   # Challenge Handshake Authentication Protocol
```

### Authorization and Accounting

**Basic AAA Configuration:**

```terraform
enable_authorization = true
enable_accounting   = true
enable_command_auth = true

authorization_type = "tacacs"
accounting_type    = "tacacs"
```

**Command Authorization:**

```terraform
enable_command_auth = true
command_authorization_method = "per_command"  # or "per_session"

# Command sets definition
command_sets = {
  "basic_show" = {
    allowed_commands = ["show.*", "ping.*"]
    denied_commands  = ["conf.*", "write.*"]
  }
}
```

### Cisco ISE Integration

**ISE-Specific Configuration:**

```terraform
# Cisco ISE integration
attribute_mapping = {
  username       = "User-Name"
  groups         = "cisco-avpair"
  privilege_level = "priv-lvl"
  service_type   = "Service-Type"
}

enforce_ise_policies = true
ise_policy_name     = "Bastion_Access_Policy"
```

### Security Configuration

**Encryption Settings:**

```terraform
encryption_type = "md5"      # or "sha1", "sha256"
enable_tls     = true
tls_version    = "1.3"
```

**Strong Authentication:**

```terraform
require_strong_auth = true
min_password_length = 12
enable_two_factor   = true
```

**IP Restrictions:**

```terraform
enable_ip_validation = true
allowed_ip_ranges = [
  "10.0.0.0/8",
  "192.168.1.0/24"
]
```

### Privilege Management

**Privilege Levels:**

```terraform
privilege_levels = {
  "level_1" = {
    privilege      = 1
    command_set    = "basic_show"
    description    = "Basic show commands only"
  }
  "level_15" = {
    privilege      = 15
    command_set    = "full_admin"
    description    = "Full administrative access"
    approval_required = true
  }
}
```

**Privilege Escalation:**

```terraform
enable_privilege_escalation = true
escalation_policies = {
  "emergency" = {
    auto_approve    = false
    approval_timeout = 300
    escalation_chain = ["manager", "security_team"]
  }
}
```

### Session Management

**Session Configuration:**

```terraform
session_timeout         = 3600  # 1 hour
idle_timeout           = 900   # 15 minutes
max_concurrent_sessions = 5
```

**Session Monitoring:**

```terraform
enable_session_monitoring = true
enable_session_recording  = true
auto_terminate_on_idle   = true
```

### Attribute Mapping

**Standard Attributes:**

```terraform
attribute_mapping = {
  username       = "User-Name"
  groups         = "Group-Name"
  privilege_level = "priv-lvl"
  service_type   = "Service-Type"
  nas_port_type  = "NAS-Port-Type"
}
```

**Custom Attributes:**

```terraform
attribute_mapping = {
  username        = "User-Name"
  department      = "Department"
  employee_id     = "Employee-ID"
  manager         = "Manager"
  cost_center     = "Cost-Center"
  access_level    = "Access-Level"
  contract_number = "Contract-Number"  # For vendors
}
```

### Domain and Multi-Tenancy

**Multi-Domain Configuration:**

```terraform
domain_servers = [
  {
    domain        = "production"
    host          = "tacacs-prod.company.com"
    shared_secret = var.prod_tacacs_secret
  },
  {
    domain        = "development"
    host          = "tacacs-dev.company.com"
    shared_secret = var.dev_tacacs_secret
  }
]

enable_domain_routing = true
domain_attribute     = "Domain"
```

### Vendor and Contractor Access

**Vendor-Specific Controls:**

```terraform
enable_vendor_controls = true
require_escort        = true
vendor_session_limit  = 4  # hours

vendor_command_sets = {
  "readonly" = {
    allowed_commands = ["show.*", "ping.*"]
    denied_commands  = ["conf.*", "write.*"]
  }
}
```

**Contractor Management:**

```terraform
contractor_policies = {
  "standard" = {
    max_session_duration = 8   # hours
    require_supervisor   = true
    restricted_commands  = true
  }
}
```

### Network Automation Integration

**Automation-Specific Settings:**

```terraform
enable_api_auth     = true
api_username_format = "automation_{service}"

enable_service_accounts = true
service_account_prefix  = "svc_"

automation_policies = {
  "backup_scripts" = {
    privilege_level = 15
    command_set     = "backup"
    time_restriction = "business_hours"
  }
}
```

### Time-Based Access Control

**Business Hours Restrictions:**

```terraform
enable_time_restrictions = true
business_hours = {
  start = "08:00"
  end   = "18:00"
  days  = ["monday", "tuesday", "wednesday", "thursday", "friday"]
}

after_hours_policy = {
  require_approval = true
  max_session_time = 2  # hours
  escalation_required = true
}
```

### Load Balancing and Failover

**Load Balancing Configuration:**

```terraform
load_balancing_method = "round_robin"  # or "failover_only", "weighted"

failover_servers = [
  {
    host     = "tacacs2.company.com"
    weight   = 100
    priority = 1
  }
]

enable_health_check   = true
health_check_interval = 60
```

### Monitoring and Audit

**Comprehensive Logging:**

```terraform
enable_audit_logging = true
log_authentication  = true
log_authorization   = true
log_accounting      = true
log_command_output  = true  # For security audit
```

**Compliance Reporting:**

```terraform
compliance_reporting = true
compliance_standards = ["SOX", "PCI_DSS", "HIPAA"]

audit_retention_period = 2555  # 7 years in days
```

### Development and Testing

**Development-Friendly Settings:**

```terraform
enable_debug_mode   = true
allow_test_accounts = true
ignore_cert_errors  = true

mock_user_data = {
  "test_admin" = {
    privilege_level = 15
    groups         = ["admin", "developer"]
  }
}
```

### Error Handling and Troubleshooting

**Debug Configuration:**

```terraform
enable_debug_logging = true
debug_level         = "verbose"
log_all_requests    = true
log_response_times  = true
```

**Common Issues:**

1. **Shared Secret Mismatch**: Verify shared secret configuration
2. **Network Connectivity**: Check firewall rules for port 49
3. **Time Synchronization**: Ensure NTP synchronization
4. **Attribute Mapping**: Verify TACACS+ server attribute names
5. **Command Authorization**: Check command set definitions

### Best Practices

**Security Best Practices:**

1. Use strong shared secrets with regular rotation
2. Enable TLS encryption for communication
3. Implement privilege escalation controls
4. Regular audit log reviews
5. Time-based access restrictions
6. IP address validation

**Operational Best Practices:**

1. Implement high availability with multiple servers
2. Monitor TACACS+ server health and performance
3. Document all command sets and privilege levels
4. Regular testing of failover scenarios
5. Maintain consistent attribute naming
6. Regular backup of TACACS+ configuration

**Compliance Best Practices:**

1. Enable comprehensive audit logging
2. Implement proper session recording
3. Regular access reviews and audits
4. Document all vendor access procedures
5. Maintain compliance reporting mechanisms
6. Regular security assessments

### Integration Patterns

**Network Device Integration:**

```terraform
# For network switches and routers
device_integration = {
  cisco_ios = {
    privilege_levels = [1, 7, 15]
    command_authorization = true
    session_accounting = true
  }
}
```

**Automation Platform Integration:**

```terraform
# For network automation tools
automation_integration = {
  ansible = {
    service_accounts = ["ansible_svc"]
    automation_commands = true
    api_authentication = true
  }
}
```

### Performance Optimization

**Connection Optimization:**

```terraform
connection_pooling = true
pool_size         = 10
keep_alive_timeout = 300

# For high-volume environments
enable_caching    = true
cache_timeout     = 300  # 5 minutes
max_cache_entries = 1000
```

## Import

TACACS+ external authentication can be imported using the auth_name, e.g.

```shell
terraform import wallix-bastion_externalauth_tacacs.corporate_tacacs "corporate_tacacs"
```
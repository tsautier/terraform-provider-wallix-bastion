---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{ .Name }} {{ .Type }} - {{ .ProviderName }}"
subcategory: ""
description: |-
  {{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{ .Name }} ({{ .Type | title }})

Provides a credential resource for device localdomain account.

## Example Usage

```terraform
# Basic password credential for local account
resource "wallix-bastion_device_localdomain_account_credential" "admin_password" {
  device_id     = wallix-bastion_device.server1.id
  domain_id     = wallix-bastion_device_localdomain.local.id
  account_name  = "administrator"
  type          = "password"
  password      = var.admin_password
  description   = "Local administrator password"
}

# SSH private key credential
resource "wallix-bastion_device_localdomain_account_credential" "root_key" {
  device_id     = wallix-bastion_device.server2.id
  domain_id     = wallix-bastion_device_localdomain.ssh_domain.id
  account_name  = "root"
  type          = "ssh_key"
  private_key   = file("/secure/keys/root_rsa")
  passphrase    = var.root_key_passphrase
  description   = "Root SSH private key"
}

# SSH key with certificate
resource "wallix-bastion_device_localdomain_account_credential" "service_cert" {
  device_id     = wallix-bastion_device.server3.id
  domain_id     = wallix-bastion_device_localdomain.cert_domain.id
  account_name  = "service"
  type          = "ssh_key"
  private_key   = tls_private_key.service.private_key_pem
  certificate   = tls_locally_signed_cert.service.cert_pem
  description   = "Service account with SSH certificate"
}

# Generated SSH key pair
resource "tls_private_key" "operator" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "wallix-bastion_device_localdomain_account_credential" "operator_key" {
  device_id     = wallix-bastion_device.server4.id
  domain_id     = wallix-bastion_device_localdomain.managed.id
  account_name  = "operator"
  type          = "ssh_key"
  private_key   = tls_private_key.operator.private_key_pem
  public_key    = tls_private_key.operator.public_key_openssh
  description   = "Generated operator SSH key"
}

# Public key only credential
resource "wallix-bastion_device_localdomain_account_credential" "public_only" {
  device_id     = wallix-bastion_device.server5.id
  domain_id     = wallix-bastion_device_localdomain.public_access.id
  account_name  = "readonly"
  type          = "ssh_key"
  public_key    = data.local_file.readonly_public_key.content
  description   = "Read-only public key access"
}

# Database service account
resource "random_password" "db_service" {
  length      = 24
  special     = true
  min_upper   = 2
  min_lower   = 2
  min_numeric = 2
  min_special = 2
}

resource "wallix-bastion_device_localdomain_account_credential" "db_service" {
  device_id     = wallix-bastion_device.database.id
  domain_id     = wallix-bastion_device_localdomain.db_local.id
  account_name  = "db_service"
  type          = "password"
  password      = random_password.db_service.result
  description   = "Database service account password"
}
```

{{ .SchemaMarkdown | trimspace }}

## Usage Notes

### Credential Types

**Password Credentials (`type = "password"`):**
- Use for local accounts with password authentication
- Store passwords securely using variables
- Consider auto-generation with `random_password`

**SSH Key Credentials (`type = "ssh_key"`):**
- Support both private and public keys
- Private key enables authentication from bastion
- Public key enables authentication to bastion
- Optional certificate for advanced authentication

### Prerequisites

Before creating device localdomain account credentials:
1. Create the device: `wallix-bastion_device`
2. Create the local domain: `wallix-bastion_device_localdomain`
3. Create the local domain account: `wallix-bastion_device_localdomain_account`

### SSH Key Management

**Supported Key Types:**
- RSA (1024, 2048, 4096, 8192 bits)
- DSA (1024 bits)
- ECDSA (256, 384, 521 bits)
- Ed25519

**Key Generation with Terraform:**
```terraform
# RSA 4096 key
resource "tls_private_key" "rsa" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

# Ed25519 key (recommended)
resource "tls_private_key" "ed25519" {
  algorithm = "Ed25519"
}

# ECDSA key
resource "tls_private_key" "ecdsa" {
  algorithm   = "ECDSA"
  ecdsa_curve = "P384"
}
```

### Password Management

**Strong Password Generation:**
```terraform
resource "random_password" "strong" {
  length      = 32
  special     = true
  min_upper   = 4
  min_lower   = 4
  min_numeric = 4
  min_special = 4
}
```

**Variable-based Passwords:**
```terraform
variable "sensitive_password" {
  description = "Sensitive account password"
  type        = string
  sensitive   = true
}
```

### Certificate Authentication

For SSH certificate-based authentication:
```terraform
# Generate CA key
resource "tls_private_key" "ca" {
  algorithm = "Ed25519"
}

# Generate user key
resource "tls_private_key" "user" {
  algorithm = "Ed25519"
}

# Create certificate request
resource "tls_cert_request" "user" {
  private_key_pem = tls_private_key.user.private_key_pem
  
  subject {
    common_name = "user@example.com"
  }
}

# Sign certificate
resource "tls_locally_signed_cert" "user" {
  cert_request_pem   = tls_cert_request.user.cert_request_pem
  ca_private_key_pem = tls_private_key.ca.private_key_pem
  ca_cert_pem        = tls_self_signed_cert.ca.cert_pem
  
  validity_period_hours = 24
  
  allowed_uses = [
    "digital_signature",
    "key_encipherment",
  ]
}

# Use in credential
resource "wallix-bastion_device_localdomain_account_credential" "cert_user" {
  # ... other fields ...
  private_key = tls_private_key.user.private_key_pem
  certificate = tls_locally_signed_cert.user.cert_pem
}
```

### Security Best Practices

1. **Sensitive Variables**: Mark passwords and keys as sensitive
2. **Key Strength**: Use RSA 4096 or Ed25519 keys
3. **Passphrase Protection**: Encrypt private keys with passphrases
4. **Rotation**: Implement regular credential rotation
5. **Least Privilege**: Use separate credentials per service/role

### Common Patterns

**Administrator Account:**
```terraform
resource "wallix-bastion_device_localdomain_account_credential" "admin" {
  account_name = "administrator"
  type         = "password"
  password     = var.admin_password
  description  = "Local administrator password"
}
```

**Service Account with Key:**
```terraform
resource "tls_private_key" "service" {
  algorithm = "Ed25519"
}

resource "wallix-bastion_device_localdomain_account_credential" "service" {
  account_name = "service"
  type         = "ssh_key"
  private_key  = tls_private_key.service.private_key_pem
  public_key   = tls_private_key.service.public_key_openssh
  description  = "Service account SSH key"
}
```

**Backup Account:**
```terraform
resource "random_password" "backup" {
  length  = 32
  special = true
}

resource "wallix-bastion_device_localdomain_account_credential" "backup" {
  account_name = "backup"
  type         = "password"
  password     = random_password.backup.result
  description  = "Backup account password"
}
```

### Credential Relationship

```
Device → Device Local Domain → Device Local Domain Account → Credential
  ↓            ↓                        ↓                         ↓
Server1 → local_domain → admin_account → password/ssh_key
```

### File-based Keys

**Loading from Files:**
```terraform
data "local_file" "private_key" {
  filename = "/secure/keys/device_key"
}

data "local_file" "public_key" {
  filename = "/secure/keys/device_key.pub"
}

resource "wallix-bastion_device_localdomain_account_credential" "file_key" {
  # ... other fields ...
  private_key = data.local_file.private_key.content
  public_key  = data.local_file.public_key.content
}
```

## Import

Device localdomain account credential can be imported using an id made up of `<device_id>/<domain_id>/<account_name>`, e.g.

```shell
terraform import wallix-bastion_device_localdomain_account_credential.admin_password xxxxxxxx/yyyyyyyy/administrator
```